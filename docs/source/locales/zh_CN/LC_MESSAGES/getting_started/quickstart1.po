# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, ZhuochengZhang
# This file is distributed under the same license as the FlexRAG
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FlexRAG Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-10 16:59+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/getting_started/quickstart1.md:1
#: 452867f3b4ee4da683f1d77d8107abb9
msgid "Quickstart: Deploying and Evaluating RAG Assistant with FlexRAG"
msgstr "快速入门：部署和评估您的 RAG 助手"

#: ../../source/getting_started/quickstart1.md:2
#: 416e2018865f4e3198c1791029feaa95
msgid ""
"This quickstart guide will help you deploy or evaluate the RAG assistant "
"with FlexRAG. FlexRAG provides multiple ways to develop and evaluate your"
" RAG assistant, including configuring the built-in RAG assistant and "
"deploying a GUI application using FlexRAG's entrypoints, or developing "
"your own RAG assistant by importing FlexRAG as a library."
msgstr ""
"本快速入门指南将会向您展示如何使用 FlexRAG 部署或评估 RAG 助手。FlexRAG 提供了多种方式来开发和评估您的 RAG "
"助手，包括配置 FlexRAG 内置的 RAG 助手并运行 GUI 应用程序，或者将 FlexRAG 作为库导入您的程序来开发您自己的 RAG "
"助手。"

#: ../../source/getting_started/quickstart1.md:4
#: 5d9d4ddab18b475d99e7fcbc4dc6063a
msgid ""
"In FlexRAG, a RAG assistant is similar to a traditional chatbot but can "
"generate responses by leveraging an external knowledge base. As a result,"
" many RAG-related operations are encapsulated within the RAG assistant, "
"such as determining when retrieval is needed, how to perform retrieval, "
"and how to process the retrieved documents."
msgstr ""
"在 FlexRAG 中，RAG 助手类似于传统的对话机器人，但可以借助外部知识库来生成相应的回复。因此，大量和 RAG 相关的操作均会被封装在 "
"RAG 助手中，如判断何时需要检索，如何进行检索，以及如何处理检索得到的文档。"

#: ../../source/getting_started/quickstart1.md:6
#: 53f29a289ccb4aac9224ee4130e45452
msgid ""
"FlexRAG provides several built-in RAG assistants, including "
"{class}`~flexrag.assistant.BasicAssistant`, "
"{class}`~flexrag.assistant.ModularAssistant`, "
"{class}`~flexrag.assistant.ChatQAAssistant`, .etc. You can run these "
"assistants with FlexRAG's entrypoints. In this guide, we will show you "
"how to run the {class}`~flexrag.assistant.ModularAssistant`, as it offers"
" a wide range of configuration options."
msgstr ""
"FlexRAG 提供了一些内置的 RAG 助手，包括 "
"{class}`~flexrag.assistant.BasicAssistant`、{class}`~flexrag.assistant.ModularAssistant`、{class}`~flexrag.assistant.ChatQAAssistant`"
" 等。您可以直接通过 FlexRAG 的入口点来运行这些 RAG 助手。由于 "
"{class}`~flexrag.assistant.ModularAssistant` "
"较为灵活且提供了大量的可更改选项，因此在本指南中，我们会向您展示如何运行该助手。"

#: ../../source/getting_started/quickstart1.md:8
#: a8af49dbfe0a4af2852fe4b5b4676b05
msgid ""
"The basic structure of the {class}`~flexrag.assistant.ModularAssistant` "
"is as follows:"
msgstr "{class}`~flexrag.assistant.ModularAssistant` 的基本结构如下图所示："

#: ../../source/getting_started/quickstart1.md:10
#: 908ce34ea6a9419fa53b2f7278795888
msgid "ModularAssistant"
msgstr "ModularAssistant"

#: ../../source/getting_started/quickstart1.md:16
#: 6dc8921c01cc4c088236dfcdc6ec6918
msgid ""
"The {class}`~flexrag.assistant.ModularAssistant` is composed of four key "
"components: a retriever, a reranker, a context refiner, and a generator."
msgstr ""
"{class}`~flexrag.assistant.ModularAssistant` "
"由四个主要部件组成，分别是一个检索器，一个重排器，一个上下文精炼器和一个生成器。"

#: ../../source/getting_started/quickstart1.md:17
#: 5b38e28b03d54e8d977d4231922bdc5d
msgid "The **retriever** fetches relevant passages from the knowledge base."
msgstr "**检索器** 用于从知识库中检索和用户输入相关的文档。"

#: ../../source/getting_started/quickstart1.md:18
#: 9f3da063225a47a0af6359f16d5c144d
msgid ""
"The **reranker** reorders the retrieved passages for better relevance, "
"which is optional."
msgstr "**重排器** 用于将检索器检索到的文档按照和用户输入的相关度进行更准确的重排。"

#: ../../source/getting_started/quickstart1.md:19
#: d44d86db3e2e4ae9b59595038b9827e5
msgid ""
"The **context refiner** optimizes the context for the generator, which is"
" optional."
msgstr "**上下文精炼器** 用于将检索到的文档进行进一步地精炼以更好地适配生成器，这一组件是可选的。"

#: ../../source/getting_started/quickstart1.md:20
#: 1cd09cf4531a4499a40443db7820a1bb
msgid ""
"The **generator** creates the final response based on the (refined) "
"context."
msgstr "**生成器** 用于根据检索（精炼）到的上下文生成最终的回复。"

#: ../../source/getting_started/quickstart1.md:22
#: 7d00443edee74f9da0db99f1cfff1902
msgid ""
"Each component can be configured independently, allowing you to easily "
"customize your RAG assistant by adjusting the settings for each one."
msgstr "每个组件都可以独立地配置，这将允许您通过改变配置来轻松地定制您的 RAG 助手。"

#: ../../source/getting_started/quickstart1.md:24
#: 78e428e580cb4b36bb78104e4df68f6a
msgid "Deploying a GUI application"
msgstr "部署 GUI 应用"

#: ../../source/getting_started/quickstart1.md:25
#: f1aa0131f2814c7da1619d1cd2c9b424
msgid ""
"The easiest way to run a RAG assistant is to use FlexRAG's entrypoints to"
" start a GUI application. You can run the following command to start a "
"GUI application with the {class}`~flexrag.assistant.ModularAssistant`. In"
" the following command, a retriever based on Wikipedia knowledge base "
"provided by FlexRAG and a generator from OpenAI are used to build a "
"typical RAG pipeline. Make sure to replace `$OPENAI_KEY` with your OpenAI"
" access key."
msgstr ""
"运行 RAG 助手最简单的方式就是使用 FlexRAG 内置的入口点来运行 GUI 应用。您可以通过下面的命令来运行一个模块化 RAG 助手 "
"{class}`~flexrag.assistant.ModularAssistant`。为了方便，这里使用了 FlexRAG "
"提供的基于维基百科的检索器，以及来自 OpenAI 的生成器。您需要将这里的 `$OPENAI_KEY` 替换为您的 OpenAI 访问密钥，或在"
" shell 中设置相应的变量。"

#: ../../source/getting_started/quickstart1.md:38
#: f325631edc844c3da70e4a0183307269
msgid ""
"Then you can visit the GUI application at `http://localhost:7860` in your"
" browser. You will see a simple interface where you can input your "
"question and get the response from the RAG assistant."
msgstr ""
"运行上述命令后，您就可以通过浏览器访问 `http://localhost:7860` 来浏览您的 GUI "
"应用。您将会看到一个如下图所示的界面，您可以键入您的问题，该 RAG 助手将根据维基百科中的信息来生成相应的回复。"

#: ../../source/getting_started/quickstart1.md:40
#: 02aebfb78ea74c8ca4d98787a5593fd6
msgid "GUI"
msgstr "GUI"

#: ../../source/getting_started/quickstart1.md:47
#: d7b9fb4f997349dab764e1b8d2bcc119
msgid ""
"In this example, we employ the pre-built `FlexRetriever` based on the "
"Wikipedia knowledge base. You can also use other retrievers provided by "
"FlexRAG or build your own retriever. For more information, please refer "
"to the {doc}`../tutorial/preparing_retriever` section."
msgstr ""
"在这个例子中，我们使用了一个基于维基百科知识库的 `FlexRetriever` 检索器，您也可以使用 FlexRAG "
"提供的其它检索器或构建您自己的检索器。您可以访问 {doc}`../tutorial/preparing_retriever` "
"一节以获取更多相关信息。"

#: ../../source/getting_started/quickstart1.md:50
#: 12439ead6ea048599e22f52da0c8f7cf
msgid "Evaluating the RAG assistant"
msgstr "评估您的 RAG 助手"

#: ../../source/getting_started/quickstart1.md:51
#: c158075c46c6439aa30067a7c463c852
msgid ""
"FlexRAG also offers convenient command-line tools to assist you in "
"evaluating your RAG assistant. You can easily evaluate your RAG assistant"
" on a variety of knowledge-intensive tasks. The following command let you"
" evaluate the above assistant on the *Natural Questions (NQ)* dataset:"
msgstr ""
"FlexRAG 提供了方便的命令行工具来协助您评估您的 RAG 助手，您可以轻松地在多种知识密集型任务上评估您的 RAG 助手。下面的命令将会 "
"*Natural Questions (NQ)* 数据集上评估这个模块化 RAG 助手 `ModularAssistant`"

#: ../../source/getting_started/quickstart1.md:68
#: 56e9329ab0184471a90e0298238f071a
msgid ""
"As before, it is also necessary to replace $OPENAI_KEY with your OpenAI "
"access key here."
msgstr "正如此前，您依然需要将 $OPENAI_KEY 替换为您的 OpenAI API 密钥。"

#: ../../source/getting_started/quickstart1.md:70
#: f47dc185202c42c5bf35312ed7aaf4eb
msgid ""
"In the command above, the parameters `name=nq` and `split=test` specify "
"that the evaluation is to be conducted on the test set of the *NQ* "
"dataset. The parameter "
"`eval_config.metrics_type=[retrieval_success_rate,generation_f1,generation_em]`"
" indicates that during the evaluation, the retrieval *success rate*, the "
"corresponding *F1* score for generation, and the *Exact Match* score for "
"generation are to be calculated."
msgstr ""
"在上面的命令中 `name=nq` 和 `split=test` 这两个参数指出我们将在 *NQ* "
"数据集的测试集上进行评估。`eval_config.metrics_type=[retrieval_success_rate,generation_f1,generation_em]`这一参数指出我们将使用"
" *检索成功率* 、 *响应F1值* 以及 *响应的完全匹配* 来作为评价指标。"

#: ../../source/getting_started/quickstart1.md:73
#: 47be19f91f6445e39db9d4a191fa16ec
msgid ""
"For more information about the RAG evaluation tasks, please refer to the "
"{class}`~flexrag.datasets.RAGEvalDatasetConfig` class. For more "
"information about the evaluation metrics, please refer to the "
"{doc}`../reference/metrics` section."
msgstr ""
"如需获取更多有关 RAG 评估方面的信息，请参考 {class}`~flexrag.datasets.RAGEvalDatasetConfig` "
"文档。  如需获取更多有关评估指标方面的信息，请参考 {doc}`../reference/metrics` 文档。"

#: ../../source/getting_started/quickstart1.md:77
#: 8cc61b7f58ef456c80fa081ec5cbf097
msgid "Running the RAG assistan directly"
msgstr "在其它代码中应用 RAG 助手"

#: ../../source/getting_started/quickstart1.md:78
#: c930a65d3e694f24bb2a23c98195c82f
msgid ""
"You can also run the RAG assistant directly in your Python code. The "
"following code snippet demonstrates how to run the "
"{class}`~flexrag.assistant.ModularAssistant` with a "
"{class}`~flexrag.retriever.FlexRetriever` and an "
"{class}`~flexrag.models.OpenAIGenerator`:"
msgstr ""
"您也可以直接在您的代码中运行 RAG 助手。下面的代码片段将会向您展示如何运行一个采用 "
"{class}`~flexrag.retriever.FlexRetriever` 检索器和 "
"{class}`~flexrag.models.OpenAIGenerator` 生成器的模块化 RAG 助手 "
"{class}`~flexrag.assistant.ModularAssistant` ："

#: ../../source/getting_started/quickstart1.md:105
#: 95945919466f4fb6abdbad6c74f2e9b7
msgid ""
"Similar to before, you need to replace `<your-api-key>` in the code above"
" with your API key."
msgstr "正如此前，您需要将 `<your-api-key>` 替换为您的 API 密钥。"

#: ../../source/getting_started/quickstart1.md:107
#: aa997952014d402f9ade08c8426de731
msgid ""
"In the command above, we use the `answer` method to pose a question to "
"the assistant and receive three return values: `response`, `contexts`, "
"and `metadata`. Here, `response` is the final reply from the assistant, "
"while `contexts` are the relevant documents retrieved by the assistant, "
"and `metadata` contains additional information from the generation "
"process."
msgstr ""
"在上面的命令中，我们使用 `answer` 方法向助手提出问题，并接收三个返回值：`response`、`contexts` 和 "
"`metadata`。其中，`response` 是该助手的最终回复，而 `contexts` 是助手检索到的相关文档，`metadata` "
"包含来自生成过程的附加信息。"

#: ../../source/getting_started/quickstart1.md:110
#: 9bf64df37cd143619642bcc59259eef3
msgid ""
"For more information about the RAG Assistant class, please refer to the "
"{doc}`../reference/assistant` section."
msgstr "如需获取更多有关 RAG 助手方面的信息，请参考 {doc}`../reference/assistant` 小节。"

#: ../../source/getting_started/quickstart1.md:113
#: 78c67d4bf33a437e87b34c1ac325008b
msgid "Developing your own RAG assistant"
msgstr "构建您自己的 RAG 助手"

#: ../../source/getting_started/quickstart1.md:114
#: 0d861d186b6c4044821f659675e38805
msgid ""
"You can also develop your own RAG assistant by inherit the "
"{class}`~flexrag.assistant.AssistantBase` class and registering it with "
"the `ASSISTANTS` decorator. Then you are able to run your own RAG "
"assistant using FlexRAG's entrypoints by adding the "
"`user_module=<your_module_path>` argument to the command. You can find "
"more information in the [Developing your own RAG "
"assistant](../tutorial/building_assistant.md) tutorial."
msgstr ""
"您也可以通过继承 {class}`~flexrag.assistant.AssistantBase` 类来构建您自己的 RAG "
"助手，并通过使用装饰器 `ASSISTANTS` 装饰您的类来注册该 RAG 助手。随后您就可以直接通过 FlexRAG 内置的入口点来运行 "
"GUI 应用或评估您的 RAG 助手。更多关于如何构建您的助手，可以访问教程 [构建您自己的 RAG "
"助手](../tutorial/building_assistant.md) 以获取更多信息。"

#~ msgid ""
#~ "For more information about the "
#~ "evaluation metrics, please refer to the"
#~ " :doc:`../reference/metrics` section."
#~ msgstr "如需获取更多有关 RAG 评估方面的信息，请参考 :doc:`../reference/metrics` 小节。"

