# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, ZhuochengZhang
# This file is distributed under the same license as the FlexRAG
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FlexRAG Documentation \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-10 14:55+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../source/tutorial/entrypoints.md:1 0340429fe58148fe8042f30f970a2122
msgid "FlexRAG Entrypoints"
msgstr "FlexRAG 入口点"

#: ../../source/tutorial/entrypoints.md:2 a2f9288198cb4132942652a012f3a756
msgid ""
"FlexRAG entrypoints refer to a series of command-line executable programs"
" provided by FlexRAG. These programs can help you build indexes, evaluate"
" RAG assistants, manage retrieval caches, launch GUI applications, and "
"more. Each entry point allows parameters to be passed either via the "
"command line or through a configuration file. This tutorial will guide "
"you on how to use these entrypoints and customize your workflow with "
"parameters."
msgstr ""
"FlexRAG 入口点指一系列由 FlexRAG 提供的可通过命令行启动的程序。这些程序可以帮助您构建索引、评估 RAG "
"助手、管理检索缓存、启动GUI应用程序等。每个入口点均可以通过命令行或配置文件的方式传入参数。本教程将向您展示如何使用这些入口点并利用参数定制您的工作流程。"

#: ../../source/tutorial/entrypoints.md:4 6eecb0fe55e348d89289f917ad97f5de
msgid "Provided Entrypoints"
msgstr "FlexRAG 内置入口点"

#: ../../source/tutorial/entrypoints.md:5 8fce9f241ffb4610829528d9c0385064
msgid ""
"In this section, we will introduce all FlexRAG entrypoints and their "
"corresponding configuration structures."
msgstr "在这一小节中，我们将向您展示 FlexRAG 的内置入口点及其配置结构。"

#: ../../source/tutorial/entrypoints.md:7 cdc9038ac2934a4cac0ce7d13980a6d2
msgid "Adding Passages to the Retriever"
msgstr "向检索器中添加文档"

#: ../../source/tutorial/entrypoints.md:8 f1be7a204c49419aa53e859050ba618c
msgid ""
"This entrypoint is used to add the passage to the retriever. You can use "
"this entrypoint by running `python -m "
"flexrag.entrypoints.prepare_retriever`. The defination of the "
"configuration structure for the `prepare_retriever` entrypoint is as "
"follows:"
msgstr ""
"该入口点用于向检索器中添加段落。"
"你可以通过运行命令 `python -m flexrag.entrypoints.prepare_retriever`来使用该入口点。"
"prepare_retriever 入口点的配置结构定义如下："

#: 3469f45f926746888c8fdb4ecd2d8728
#: flexrag.entrypoints.prepare_retriever.Config:1 of
msgid "Bases: :py:class:`~flexrag.datasets.rag_dataset.RAGCorpusDatasetConfig`"
msgstr ""

#: ../../source/tutorial/entrypoints.md:19 24b71a20c9f0438b81cd161d832f4705
msgid "Adding the Index for FlexRetriever"
msgstr "向 FlexRetriever 中添加索引"

#: ../../source/tutorial/entrypoints.md:20 66e4b70dca9e4020a26509909b8c3cb3
msgid ""
"This entrypoint is used to add the index for the `FlexRetriever`. You can"
" use this entrypoint by running `python -m "
"flexrag.entrypoints.add_index`. The defination of the configuration "
"structure for the `add_index` entrypoint is as follows:"
msgstr ""
"此入口用于为 `FlexRetriever` 添加索引。"
"你可以通过运行 `python -m flexrag.entrypoints.add_index` 来使用此入口。"
"add_index 入口的配置结构定义如下："

#: db90c6f971a64e9ea26256adcd5c034f flexrag.entrypoints.add_index.Config:1 of
msgid ""
"Bases: :py:class:`~types.RetrieverIndexConfig`, "
":py:class:`~flexrag.retriever.index.multi_field_index.MultiFieldIndexConfig`"
msgstr ""

#: ../../source/tutorial/entrypoints.md:31 96ddf38050b44670ab09c586e82a0e69
msgid "Evaluating the Assistant"
msgstr "评估 RAG 助手"

#: ../../source/tutorial/entrypoints.md:32 b99dac7f264040d3af314ca7faec1bdf
msgid ""
"This entrypoint is used to evaluate the assistant on a given dataset. You"
" can use this entrypoint by running `python -m "
"flexrag.entrypoints.eval_assistant`. The defination of the configuration "
"structure for the `eval_assistant` entrypoint is as follows:"
msgstr ""
"该入口点可用于评估您的 RAG 助手，您可以通过执行 `python -m flexrag.entrypoints.eval_assistant` "
"来运行该入口点。该入口点的配置结构如下所示："

#: 355d6f9adc4a442dba72ccad0dea5d05 flexrag.entrypoints.eval_assistant.Config:1
#: of
msgid ""
"Bases: :py:class:`~types.AssistantConfig`, "
":py:class:`~flexrag.datasets.rag_dataset.RAGEvalDatasetConfig`"
msgstr ""

#: ../../source/tutorial/entrypoints.md:43 e79bc67aec064253a9ffdc03d3c7336d
msgid "Running GUI Application"
msgstr "通过图形界面运行 RAG 助手"

#: ../../source/tutorial/entrypoints.md:44 76d34d79b5144b0e970a48bd7f8f999d
msgid ""
"This entrypoint is used to run the assistant using the built-in Gradio "
"GUI interface. You can use this entrypoint by running `python -m "
"flexrag.entrypoints.run_interactive`. The defination of the configuration"
" structure for the `run_interactive` entrypoint is as follows:"
msgstr ""
"FlexRAG 提供了一个简易的图形界面来帮助您展示或调试您的 RAG 助手，该图形界面由 Gradio 编写，您可以通过执行 `python "
"-m flexrag.entrypoints.run_interactive` 来运行该入口点。该入口点的配置结构如下所示："

#: 6ffbbd58f945456c96c73c0142b77a4e
#: flexrag.entrypoints.run_interactive.Config:1 of
msgid "Bases: :py:class:`~types.AssistantConfig`"
msgstr ""

#: ../../source/tutorial/entrypoints.md:55 76c9927124b940f48d4b408023e08888
msgid "Cache Management"
msgstr "缓存管理"

#: ../../source/tutorial/entrypoints.md:56 e2464bbcbffe4b5da00e46a9d728b285
msgid ""
"This entrypoint is used to manage the cache for the retrievers. You can "
"use this entrypoint by running `python -m flexrag.entrypoints.cache`. The"
" defination of the configuration structure for the `cache` entrypoint is "
"as follows:"
msgstr ""
"在 FlexRAG 内置的检索器中均应用了缓存功能，用于减少检索相同查询时的开销。这个入口点就可以用于管理已经被持久化的缓存。您可以执行 "
"`python -m flexrag.entrypoints.cache` 来运行该入口点。该入口点的配置结构如下所示："

#: 8a2effb7e6724bc2afa9179145ed286a flexrag.entrypoints.cache.Config:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: ../../source/tutorial/entrypoints.md:68 7bf5280ad0af4eada25e0fa10e0f41ff
msgid ""
"If you wish to disable the Cache during retrieval, you can set the "
"environment variable by `export DISABLE_CACHE=True`."
msgstr "如果您希望在使用 FlexRAG 检索器时不使用缓存，您可以在环境变量中设置 `DISABLE_CACHE=True`。"

#: ../../source/tutorial/entrypoints.md:71 e10ab0a8bde244779a600ecec80921e3
msgid "Deploying the Retriever"
msgstr "部署检索器"

#: ../../source/tutorial/entrypoints.md:72 db893760c5bb4fa7b0f198d0904eee00
msgid ""
"FlexRAG also provides an entrypoint to deploy the retriever as a service."
" This is helpful when you want to use the retriever to fine-tune your own"
" RAG assistant or when you want to use the retriever in a production "
"demonstration. You can use this entrypoint by running `python -m "
"flexrag.entrypoints.serve_retriever`. The defination of the configuration"
" structure for the `deploy` entrypoint is as follows:"
msgstr ""
"FlexRAG 还提供了一个入口点，用于将检索器部署为服务。"
"当你想使用检索器来微调你自己的 RAG 助手，或者想在生产演示中使用检索器时，这非常有帮助。"
"你可以通过运行以下命令来使用这个入口点： `python -m flexrag.entrypoints.serve_retriever` 。"
"该入口点的配置结构如下所示："

#: d214ec907d35463ca7b9158b79b27731
#: flexrag.entrypoints.serve_retriever.Config:1 of
msgid "Bases: :py:class:`~flexrag.retriever.flex_retriever.FlexRetrieverConfig`"
msgstr ""

#: ../../source/tutorial/entrypoints.md:85 4f3cde31b3c848b6bb5e000df19a3166
msgid "Configuration Management"
msgstr "配置管理"

#: ../../source/tutorial/entrypoints.md:86 caff1214ea944d50b580f57da02b7f11
msgid ""
"FlexRAG employs `dataclass` and [hydra-"
"core](https://github.com/facebookresearch/hydra) for configuration "
"management, which brings remarkable clarity to the complex configurations"
" within the RAG pipeline. Moreover, you can pass parameters to the "
"FlexRAG's entrypoints either via the command line or through "
"configuration files. This section will illustrate how to utilize both "
"methods to convey parameters to the FlexRAG entry point."
msgstr ""
"FlexRAG 使用 `dataclass` 和 [hydra-"
"core](https://github.com/facebookresearch/hydra) 进行配置管理，这使得 RAG "
"流水线中复杂的配置变得非常清晰。同时您既可以通过命令行，也可以通过配置文件来向 FlexRAG "
"入口点传入相关参数。本节将会向您展示如何使用这两种参数向 FlexRAG 入口点传递参数。"

#: ../../source/tutorial/entrypoints.md:88 c74a3cf097d843dcb17d61a2406d91b4
msgid "Passing Configuration via Command Line"
msgstr "通过命令行传入参数"

#: ../../source/tutorial/entrypoints.md:89 de925c9498a143ed9ce8282fe2ef03f0
msgid ""
"Configurations can be passed via the command line using the "
"`<config_key>=<config_value>` format. For example, you can run the "
"following command to set the configuration for a *ModularAssistant* with "
"a *FlexRetriever* and an *OpenAIGenerator*:"
msgstr ""
"配置信息可以通过在命令行中使用 `<config_key>=<config_value>` "
"的格式来传入。教程中大多数的例子都使用了这样的方式，该方式的优势是简单和直接。举例来说，您可以通过下面的命令来指定 FlexRAG "
"通过图形界面运行一个 *ModularAssistant* ，同时指定该助手使用 *FlexRetriever* 和 *OpenAIGenerator* 。"

#: ../../source/tutorial/entrypoints.md:107 0b28f46b22df4af890ba82b0140bc1a4
msgid "Passing Configuration via Configuration File"
msgstr "通过配置文件传入参数"

#: ../../source/tutorial/entrypoints.md:108 7845acfdefef49209882727c607b4fc0
msgid ""
"Configurations can also be passed via a `YAML` file. For example, you can"
" create a `config.yaml` file with the following content:"
msgstr ""
"配置信息也可以通过 `YAML` 文件进行传入，这种方式会使得您的配置更容易管理。举例来说，您可以创建一个名为 `config.yaml` "
"的文件，并在文件中写入下述内容："

#: ../../source/tutorial/entrypoints.md:133 0ca712368f374938a7514ae7d9d86fbf
msgid "Then, you can run the following command to use the configuration file:"
msgstr "随后您就可以通过运行下面的命令来将这个配置文件中的配置传入 FlexRAG 入口点程序中。"

#: ../../source/tutorial/entrypoints.md:141 be6d66364f624eceae413629f3355475
msgid ""
"For more detailed usage, we recommend you to go through the [Hydra "
"documentation](https://hydra.cc/docs/intro/) to get a better "
"understanding of the concepts and features."
msgstr "您可以访问 [Hydra 文档](https://hydra.cc/docs/intro/)以获取更多有关如何传递配置信息的方式。"

#~ msgid ""
#~ "FlexRAG provides several entrypoints to "
#~ "run the RAG application. Each entrypoint"
#~ " has a default configuration structure "
#~ "that can be used to customize the"
#~ " workflow. This tutorial provides an "
#~ "overview of the FlexRAG entrypoints and"
#~ " how to customize the workflow using"
#~ " configuration management."
#~ msgstr ""
#~ "FlexRAG 入口点指一系列由 FlexRAG "
#~ "提供的可通过命令行启动的程序。这些程序可以帮助您构建索引、评估 RAG "
#~ "助手、管理检索缓存、启动GUI应用程序等。每个入口点均可以通过命令行或配置文件的方式传入参数。本教程将向您展示如何使用这些入口点并利用参数定制您的工作流程。"

#~ msgid ""
#~ "Leveraging python `dataclass` and [hydra-"
#~ "core](https://github.com/facebookresearch/hydra), FlexRAG "
#~ "simplifies configuration management, making it"
#~ " easier to handle complex setups and"
#~ " customize your workflow."
#~ msgstr ""
#~ "FlexRAG 使用 `dataclass` 和 [hydra-"
#~ "core](https://github.com/facebookresearch/hydra) 进行配置管理，这使得 "
#~ "RAG 流水线中复杂的配置变得非常清晰。同时您既可以通过命令行，也可以通过配置文件来向 FlexRAG "
#~ "入口点传入相关参数。本节将会向您展示如何使用这两种参数向 FlexRAG 入口点传递参数。"

#~ msgid "Supported Environment Variables"
#~ msgstr ""

#~ msgid ""
#~ "FlexRAG supports several environment variables"
#~ " that can be used to customize "
#~ "the workflow. The following are the "
#~ "supported environment variables:"
#~ msgstr ""

#~ msgid "`DISABLE_CACHE`: Set this variable to `False` to disable caching."
#~ msgstr ""

#~ msgid ""
#~ "`USER_MODULE`: Set this variable to the"
#~ " path of the user module to "
#~ "load custom modules."
#~ msgstr ""

#~ msgid "Evaluating the Generated Responses"
#~ msgstr "评估已生成结果"

#~ msgid ""
#~ "This entrypoint is used to evaluate "
#~ "the generated responses. You can use "
#~ "this entrypoint by running `python -m"
#~ " flexrag.entrypoints.evaluate`. The defination of"
#~ " the configuration structure for the "
#~ "`evaluate` entrypoint is as follows:"
#~ msgstr ""
#~ "某些情况下，您可能已经拥有了 RAG 助手的生成结果，此时您希望评估这些生成结果，这时您就可以使用这个入口点来对"
#~ " RAG 助手的生成结果进行评估。您可以通过 `python -m "
#~ "flexrag.entrypoints.evaluate` 这一命令来运行该入口点。该入口点的配置结构如下所示："

#~ msgid ""
#~ "Bases: :py:class:`~flexrag.metrics.evaluator.EvaluatorConfig`,"
#~ " "
#~ ":py:class:`~flexrag.datasets.line_delimited_dataset.LineDelimitedDatasetConfig`"
#~ msgstr ""

#~ msgid "Rebuilding the Retriever Index"
#~ msgstr "重构索引"

#~ msgid ""
#~ "Bases: "
#~ ":py:class:`~flexrag.retriever.retriever_base.LocalRetrieverConfig`,"
#~ " :py:class:`~types.DenseIndexConfig`"
#~ msgstr ""

#~ msgid "Configuration class for DenseRetriever."
#~ msgstr "稠密检索器的配置结构。"

#~ msgid "Parameters"
#~ msgstr "参数"

#~ msgid "Configuration for the query encoder. Default: None."
#~ msgstr "查询编码器的配置结构，默认为：None。"

#~ msgid "Configuration for the passage encoder. Default: None."
#~ msgstr "文档编码器的配置结构，默认为：None。"

#~ msgid "Fields to be encoded. None stands for all fields. Default: None."
#~ msgstr "知识条目中需要被编码的字段，默认为：None。"

#~ msgid ""
#~ "Bases: :py:class:`~types.assistant_config`, "
#~ ":py:class:`~flexrag.datasets.rag_dataset.RAGEvalDatasetConfig`"
#~ msgstr ""

#~ msgid "Bases: :py:class:`~types.assistant_config`"
#~ msgstr ""

#~ msgid "Defining Your Own Configuration"
#~ msgstr "定义您自己的配置结构"

#~ msgid ""
#~ "You can define your own configuration"
#~ " structure by creating a new "
#~ "`dataclass`. For example, you can define"
#~ " a new configuration structure for a"
#~ " custom assistant as follows:"
#~ msgstr ""
#~ "您在构建您自己的应用程序时，也可以通过定义新的 `dataclass` 来创建配置结构。举例来说，您可以定义如下"
#~ " `dataclass` 来为您的 RAG 助手创建配置结构："

